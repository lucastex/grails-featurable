Grails Featurable Plugin
---------------------------

This plugin is inspired by the act_as_featurable rails plugin (http://github.com/ccjr/acts_as_featurable).
It allows you to 'feature' your domain class to promote it somehow. The domain class will be featured for as long as you 
define (30 days by default). For example, you can use this to mark some items as 'hot' that you may be selling or some 
featured books in your library.

Installing the plugin
---------------------------

Type 'grails install-plugin featurable'

Using the plugin
---------------------------

To define which domain classes will support the featurable ability, you will have to use the static featurable property:

class Book {
  
  static featurable = true
  
  String title
  String isbn
}

Doing this, the plugin will automagically find the classes and add it one (fake) property and three methods described 
below:



* Method 'feature'

Use this method to feature your domain class. Just call this method and pass the length of time you want the item to 
be featured for. By default, the method will assume 30 days. The plugin adds 3 properties to the Integer 
class to make your life easier when trying to define how much time to feature the item for. You can also define the exact
date to expire the item by passing a java.util.Date argument to it.

def b = new Book(author:"Lucas", isbn:"123123")
b.save()

b.feature() //this will mark your book featured for 30 days

b.feature(1.day) //just one day
b.feature(5.days) //for 5 days

b.feature(1.month) //just one month
b.feature(3.months) //3 months

b.feature(1.year) //just one year
b.feature(10.years) //hope to be alive to see it


* Method 'unfeature'

Essentially the opposite method for 'feature'. It  will unfeature a previously featured object. 

def b = Book.get(1)
b.unfeature() //Ok, now it is unfeatured

This method will return true if the item was unfeatured and false if the item was already unfeatured.




* Static method 'findFeatured'

Use this method to find featured items. If you do not pass any parameters, this method will return all items that
are featured within the next 30 days. You can also pass a java.util.Date as a parameter to return objects that are
featured within a specific time frame.

//default usage, one month
def oneMonthFeaturedBooks = Book.findFeatured()

//featured items for the next year
def featuredTillNextYear = Book.findFeatured(1.year)

//featured items for just two weeks
def featuredTillNextYear = Book.findFeatured(2.weeks)


* 'featured' property

The plugin also adds a 'featured' property to the domain class that will return true/false according to featured status 
of the object. Use this wisely, as it will query the database every time it is called.

def book = Book.get(1)
def isItFeatured = book.featured


Plugin stats
------------------
