Grails Featurable Plugin
---------------------------

This plugin is inspired in the act_as_featurable rails plugin (http://github.com/ccjr/acts_as_featurable).
It allows you to 'feature' your domain class to promote it somehow. The domain class will be featured for how long you define (or 30 days by default). For example, you can use this to mark some 'hot items' that you are selling or some featured books in your library.

Installing the plugin
---------------------------

Just type 'grails install-plugin featurable'

Using the plugin
---------------------------

Of course, you'll feature your domain classes, so you need to tell the plugin which domain classes will be featured. You'll have to do this using the static featurable property:

class Book {
	
	static featurable = true
	
	String title
	String isbn
}

Doing this, the plugin will automagically find the classes and add in it one (fake) property and three methods described below:



* Method 'feature'

You'll use this to feature your domain class. Just call this method with the time you want this item to be featured. If you do not specify it, the plugin will assume 1 month (30 days) by default. The plugin adds 3 properties to the Integer class to make your life easier, so you can use it to tell how much time this object will be featured. If you want to define the exact date it expires, you can pass a java.util.Date argument to it.

def b = new Book(author:"Lucas", isbn:"123123")
b.save()

b.feature() //this will mark your book featured for 30 days

b.feature(5.days) //for 5 days
b.feature(3.months) //3 months
b.feature(10.years) //hope to be alive to see it



* Method 'unfeature'

The opposite of it, will unfeature a previously featured object. 

def b = Book.get(1)
b.unfeature() //Ok, now it is unfeatured

This method will return true if the item got unfeatured and false when the item was not even featured before calling it.



* Static method 'findFeatured'

Use this method to find featured items. By default (without any parameters) this method will return the items featured till 30 days from now. You can give any java.util.Date as a parameter to tell till when you want the objects.

//default usage
def oneMonthFeaturedBooks = Book.findFeatured()

//featured items for the next year
def c = Calendar.instance
c.add Calendar.YEAR, 1
def featuredTillNextYear = Book.find(c.time)



* 'featured' property

The plugins also adds a 'featured' property to the domain class that will return true/false according to featured status of this object. Use this with wisdom cause it will query the database every time it is called.

def book = Book.get(1)
def isItFeatured = book.featured


Plugin stats
------------------

+----------------------+-------+-------+
| Name                 | Files |  LOC  |
+----------------------+-------+-------+
| Domain Classes       |     2 |    23 | 
| Groovy Helpers       |     1 |    20 | 
| Integration Tests    |     3 |    91 | 
+----------------------+-------+-------+
| Totals               |     6 |   134 | 
+----------------------+-------+-------+
